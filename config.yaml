version: '1.0.0'

seed: 42

url: 'https://www.example.com/jobs'
pages: 500

target: 'mean_salary'

paths:
  data_dir: 'data'
  raw_data: 'data/raw_df.csv'
  feature_engineered: 'data/df_feature_engineered.csv'
  # training & testing data after split
  train_data: 'data/train_df.csv'
  test_data: 'data/test_df.csv'
  # preprocessing objects & files
  artifacts_dir: 'artifacts'
  one_hot_encoder: 'artifacts/one_hot_encoder.pkl'
  mlb: 'artifacts/mlb.pkl'
  scaler: 'artifacts/scaler.pkl'
  preprocessed_train: 'data/preprocessed_train_df.csv'
  preprocessed_test: 'data/preprocessed_test_df.csv'

preprocessing:
  # Splitter object
  train_size: 0.8
  random_state: 42
  columns_to_drop: ['min_salary',  # Not informative
                    'max_salary',  # Not informative
                    'revenue',  # Large number of missing values
                    'company',  # Not informative
                    'job_title',  # High frequency of dominant category
                    ]

training:
  feature_counts: [5, 10, 15, 20, 30, 40]
  random_state: 42
  cv_splits: 5
  shuffle: True
  scoring: neg_mean_squared_error
  default_model:
    name: "RandomForest"
    params:
      n_estimators: 100
      random_state: 42
  final_models:
    LinearRegression: {}
    Lasso:
      alpha: 0.1
      random_state: 42
    Ridge:
      alpha: 0.1
      random_state: 42
    RandomForest:
      n_estimators: 300
      random_state: 42
    GradientBoosting:
      n_estimators: 300
      random_state: 42
    XGB:
      n_estimators: 300
      random_state: 42
  rfe_step: 2
  model_path: artifacts/final_model.pkl
  model_name_path: artifacts/best_model_name.txt
  selector_path: artifacts/final_selected_features.pkl
  save_flag: True
  logging_flag: True
